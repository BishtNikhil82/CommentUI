"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src/middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nconsole.log(\"\\uD83D\\uDD10 MIDDLEWARE: loaded\");\nasync function middleware(request) {\n    let response = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next({\n        request\n    });\n    // Add security headers\n    response.headers.set(\"X-Frame-Options\", \"DENY\");\n    response.headers.set(\"X-Content-Type-Options\", \"nosniff\");\n    response.headers.set(\"Referrer-Policy\", \"strict-origin-when-cross-origin\");\n    response.headers.set(\"X-XSS-Protection\", \"1; mode=block\");\n    // Create Supabase client\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://qopbjuixcnrjyibiotko.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InFvcGJqdWl4Y25yanlpYmlvdGtvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxNzk2NzEsImV4cCI6MjA2ODc1NTY3MX0.riXsWN0WueR4Dcelss00dHR75KIVHXblkIzmvbnhtuE\", {\n        cookies: {\n            getAll: ()=>request.cookies.getAll(),\n            setAll: (cookies)=>{\n                cookies.forEach(({ name, value, options })=>{\n                    request.cookies.set(name, value);\n                    response.cookies.set(name, value, options);\n                });\n            }\n        }\n    });\n    // DO NOT REMOVE â€” this sets up the auth state\n    const { data: { session }, error } = await supabase.auth.getSession();\n    const pathname = request.nextUrl.pathname;\n    const isAuthRoute = pathname.startsWith(\"/auth\");\n    const isApiAuthRoute = pathname.startsWith(\"/api/auth\");\n    const isPublicRoute = pathname === \"/\" || pathname.startsWith(\"/public\") || pathname.startsWith(\"/_next\") || pathname.startsWith(\"/favicon\");\n    const protectedRoutes = [\n        \"/dashboard\",\n        \"/api/analytics\"\n    ];\n    const isProtectedRoute = protectedRoutes.some((route)=>pathname.startsWith(route));\n    // Allow public and API auth routes\n    if (isPublicRoute || isApiAuthRoute) {\n        return response;\n    }\n    // Redirect if protected route and user is not signed in\n    if (isProtectedRoute && !session) {\n        const redirectUrl = request.nextUrl.clone();\n        redirectUrl.pathname = \"/auth/login\";\n        redirectUrl.searchParams.set(\"next\", pathname);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(redirectUrl);\n    }\n    // Redirect logged-in users away from /auth routes\n    if (isAuthRoute && session) {\n        const next = request.nextUrl.searchParams.get(\"next\") || \"/dashboard\";\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL(next, request.url));\n    }\n    // Optional: Check for YouTube token if required\n    if (isProtectedRoute && session) {\n        const hasYouTubeToken = session.provider_token && session.provider_token.includes(\"ya29\") || session.user?.user_metadata?.provider_token?.includes(\"ya29\");\n        if (!hasYouTubeToken) {\n            const redirectUrl = request.nextUrl.clone();\n            redirectUrl.pathname = \"/auth/reauth\";\n            redirectUrl.searchParams.set(\"next\", pathname);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(redirectUrl);\n        }\n    }\n    // Always return the original `response` to preserve cookies\n    return response;\n}\nconst config = {\n    matcher: [\n        \"/((?!_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNVO0FBRTdERSxRQUFRQyxHQUFHLENBQUM7QUFFTCxlQUFlQyxXQUFXQyxPQUFvQjtJQUNuRCxJQUFJQyxXQUFXTCxxREFBWUEsQ0FBQ00sSUFBSSxDQUFDO1FBQUVGO0lBQVE7SUFFM0MsdUJBQXVCO0lBQ3ZCQyxTQUFTRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUI7SUFDeENILFNBQVNFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDBCQUEwQjtJQUMvQ0gsU0FBU0UsT0FBTyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CO0lBQ3hDSCxTQUFTRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0I7SUFFekMseUJBQXlCO0lBQ3pCLE1BQU1DLFdBQVdWLGlFQUFrQkEsQ0FDakNXLDBDQUFvQyxFQUNwQ0Esa05BQXlDLEVBQ3pDO1FBQ0VJLFNBQVM7WUFDUEMsUUFBUSxJQUFNWCxRQUFRVSxPQUFPLENBQUNDLE1BQU07WUFDcENDLFFBQVEsQ0FBQ0Y7Z0JBQ1BBLFFBQVFHLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUU7b0JBQ3ZDaEIsUUFBUVUsT0FBTyxDQUFDTixHQUFHLENBQUNVLE1BQU1DO29CQUMxQmQsU0FBU1MsT0FBTyxDQUFDTixHQUFHLENBQUNVLE1BQU1DLE9BQU9DO2dCQUNwQztZQUNGO1FBQ0Y7SUFDRjtJQUdGLDhDQUE4QztJQUM5QyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1kLFNBQVNlLElBQUksQ0FBQ0MsVUFBVTtJQUVuRSxNQUFNQyxXQUFXdEIsUUFBUXVCLE9BQU8sQ0FBQ0QsUUFBUTtJQUV6QyxNQUFNRSxjQUFjRixTQUFTRyxVQUFVLENBQUM7SUFDeEMsTUFBTUMsaUJBQWlCSixTQUFTRyxVQUFVLENBQUM7SUFDM0MsTUFBTUUsZ0JBQ0pMLGFBQWEsT0FDYkEsU0FBU0csVUFBVSxDQUFDLGNBQ3BCSCxTQUFTRyxVQUFVLENBQUMsYUFDcEJILFNBQVNHLFVBQVUsQ0FBQztJQUV0QixNQUFNRyxrQkFBa0I7UUFBQztRQUFjO0tBQWlCO0lBQ3hELE1BQU1DLG1CQUFtQkQsZ0JBQWdCRSxJQUFJLENBQUNDLENBQUFBLFFBQzVDVCxTQUFTRyxVQUFVLENBQUNNO0lBR3RCLG1DQUFtQztJQUNuQyxJQUFJSixpQkFBaUJELGdCQUFnQjtRQUNuQyxPQUFPekI7SUFDVDtJQUVBLHdEQUF3RDtJQUN4RCxJQUFJNEIsb0JBQW9CLENBQUNYLFNBQVM7UUFDaEMsTUFBTWMsY0FBY2hDLFFBQVF1QixPQUFPLENBQUNVLEtBQUs7UUFDekNELFlBQVlWLFFBQVEsR0FBRztRQUN2QlUsWUFBWUUsWUFBWSxDQUFDOUIsR0FBRyxDQUFDLFFBQVFrQjtRQUNyQyxPQUFPMUIscURBQVlBLENBQUN1QyxRQUFRLENBQUNIO0lBQy9CO0lBRUEsa0RBQWtEO0lBQ2xELElBQUlSLGVBQWVOLFNBQVM7UUFDMUIsTUFBTWhCLE9BQU9GLFFBQVF1QixPQUFPLENBQUNXLFlBQVksQ0FBQ0UsR0FBRyxDQUFDLFdBQVc7UUFDekQsT0FBT3hDLHFEQUFZQSxDQUFDdUMsUUFBUSxDQUFDLElBQUlFLElBQUluQyxNQUFNRixRQUFRc0MsR0FBRztJQUN4RDtJQUVBLGdEQUFnRDtJQUNoRCxJQUFJVCxvQkFBb0JYLFNBQVM7UUFDL0IsTUFBTXFCLGtCQUNKLFFBQVNDLGNBQWMsSUFBSXRCLFFBQVFzQixjQUFjLENBQUNDLFFBQVEsQ0FBQyxXQUMxRHZCLFFBQVF3QixJQUFJLEVBQUVDLGVBQWVILGdCQUFnQkMsU0FBUztRQUV6RCxJQUFJLENBQUNGLGlCQUFpQjtZQUNwQixNQUFNUCxjQUFjaEMsUUFBUXVCLE9BQU8sQ0FBQ1UsS0FBSztZQUN6Q0QsWUFBWVYsUUFBUSxHQUFHO1lBQ3ZCVSxZQUFZRSxZQUFZLENBQUM5QixHQUFHLENBQUMsUUFBUWtCO1lBQ3JDLE9BQU8xQixxREFBWUEsQ0FBQ3VDLFFBQVEsQ0FBQ0g7UUFDL0I7SUFDRjtJQUVBLDREQUE0RDtJQUM1RCxPQUFPL0I7QUFDVDtBQUVPLE1BQU0yQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQ1A7S0FDRDtBQUNILEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21pZGRsZXdhcmUudHM/ZDE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZXJ2ZXJDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3NyJztcclxuaW1wb3J0IHsgTmV4dFJlc3BvbnNlLCB0eXBlIE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5cclxuY29uc29sZS5sb2coJ/CflJAgTUlERExFV0FSRTogbG9hZGVkJyk7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIGxldCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5uZXh0KHsgcmVxdWVzdCB9KTtcclxuXHJcbiAgLy8gQWRkIHNlY3VyaXR5IGhlYWRlcnNcclxuICByZXNwb25zZS5oZWFkZXJzLnNldCgnWC1GcmFtZS1PcHRpb25zJywgJ0RFTlknKTtcclxuICByZXNwb25zZS5oZWFkZXJzLnNldCgnWC1Db250ZW50LVR5cGUtT3B0aW9ucycsICdub3NuaWZmJyk7XHJcbiAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1JlZmVycmVyLVBvbGljeScsICdzdHJpY3Qtb3JpZ2luLXdoZW4tY3Jvc3Mtb3JpZ2luJyk7XHJcbiAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1gtWFNTLVByb3RlY3Rpb24nLCAnMTsgbW9kZT1ibG9jaycpO1xyXG5cclxuICAvLyBDcmVhdGUgU3VwYWJhc2UgY2xpZW50XHJcbiAgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVTZXJ2ZXJDbGllbnQoXHJcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxyXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhLFxyXG4gICAge1xyXG4gICAgICBjb29raWVzOiB7XHJcbiAgICAgICAgZ2V0QWxsOiAoKSA9PiByZXF1ZXN0LmNvb2tpZXMuZ2V0QWxsKCksXHJcbiAgICAgICAgc2V0QWxsOiAoY29va2llcykgPT4ge1xyXG4gICAgICAgICAgY29va2llcy5mb3JFYWNoKCh7IG5hbWUsIHZhbHVlLCBvcHRpb25zIH0pID0+IHtcclxuICAgICAgICAgICAgcmVxdWVzdC5jb29raWVzLnNldChuYW1lLCB2YWx1ZSk7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIC8vIERPIE5PVCBSRU1PVkUg4oCUIHRoaXMgc2V0cyB1cCB0aGUgYXV0aCBzdGF0ZVxyXG4gIGNvbnN0IHsgZGF0YTogeyBzZXNzaW9uIH0sIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFNlc3Npb24oKTtcclxuXHJcbiAgY29uc3QgcGF0aG5hbWUgPSByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWU7XHJcblxyXG4gIGNvbnN0IGlzQXV0aFJvdXRlID0gcGF0aG5hbWUuc3RhcnRzV2l0aCgnL2F1dGgnKTtcclxuICBjb25zdCBpc0FwaUF1dGhSb3V0ZSA9IHBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9hcGkvYXV0aCcpO1xyXG4gIGNvbnN0IGlzUHVibGljUm91dGUgPVxyXG4gICAgcGF0aG5hbWUgPT09ICcvJyB8fFxyXG4gICAgcGF0aG5hbWUuc3RhcnRzV2l0aCgnL3B1YmxpYycpIHx8XHJcbiAgICBwYXRobmFtZS5zdGFydHNXaXRoKCcvX25leHQnKSB8fFxyXG4gICAgcGF0aG5hbWUuc3RhcnRzV2l0aCgnL2Zhdmljb24nKTtcclxuXHJcbiAgY29uc3QgcHJvdGVjdGVkUm91dGVzID0gWycvZGFzaGJvYXJkJywgJy9hcGkvYW5hbHl0aWNzJ107XHJcbiAgY29uc3QgaXNQcm90ZWN0ZWRSb3V0ZSA9IHByb3RlY3RlZFJvdXRlcy5zb21lKHJvdXRlID0+XHJcbiAgICBwYXRobmFtZS5zdGFydHNXaXRoKHJvdXRlKVxyXG4gICk7XHJcblxyXG4gIC8vIEFsbG93IHB1YmxpYyBhbmQgQVBJIGF1dGggcm91dGVzXHJcbiAgaWYgKGlzUHVibGljUm91dGUgfHwgaXNBcGlBdXRoUm91dGUpIHtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcblxyXG4gIC8vIFJlZGlyZWN0IGlmIHByb3RlY3RlZCByb3V0ZSBhbmQgdXNlciBpcyBub3Qgc2lnbmVkIGluXHJcbiAgaWYgKGlzUHJvdGVjdGVkUm91dGUgJiYgIXNlc3Npb24pIHtcclxuICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gcmVxdWVzdC5uZXh0VXJsLmNsb25lKCk7XHJcbiAgICByZWRpcmVjdFVybC5wYXRobmFtZSA9ICcvYXV0aC9sb2dpbic7XHJcbiAgICByZWRpcmVjdFVybC5zZWFyY2hQYXJhbXMuc2V0KCduZXh0JywgcGF0aG5hbWUpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChyZWRpcmVjdFVybCk7XHJcbiAgfVxyXG5cclxuICAvLyBSZWRpcmVjdCBsb2dnZWQtaW4gdXNlcnMgYXdheSBmcm9tIC9hdXRoIHJvdXRlc1xyXG4gIGlmIChpc0F1dGhSb3V0ZSAmJiBzZXNzaW9uKSB7XHJcbiAgICBjb25zdCBuZXh0ID0gcmVxdWVzdC5uZXh0VXJsLnNlYXJjaFBhcmFtcy5nZXQoJ25leHQnKSB8fCAnL2Rhc2hib2FyZCc7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwobmV4dCwgcmVxdWVzdC51cmwpKTtcclxuICB9XHJcblxyXG4gIC8vIE9wdGlvbmFsOiBDaGVjayBmb3IgWW91VHViZSB0b2tlbiBpZiByZXF1aXJlZFxyXG4gIGlmIChpc1Byb3RlY3RlZFJvdXRlICYmIHNlc3Npb24pIHtcclxuICAgIGNvbnN0IGhhc1lvdVR1YmVUb2tlbiA9XHJcbiAgICAgIChzZXNzaW9uLnByb3ZpZGVyX3Rva2VuICYmIHNlc3Npb24ucHJvdmlkZXJfdG9rZW4uaW5jbHVkZXMoJ3lhMjknKSkgfHxcclxuICAgICAgKHNlc3Npb24udXNlcj8udXNlcl9tZXRhZGF0YT8ucHJvdmlkZXJfdG9rZW4/LmluY2x1ZGVzKCd5YTI5JykpO1xyXG5cclxuICAgIGlmICghaGFzWW91VHViZVRva2VuKSB7XHJcbiAgICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gcmVxdWVzdC5uZXh0VXJsLmNsb25lKCk7XHJcbiAgICAgIHJlZGlyZWN0VXJsLnBhdGhuYW1lID0gJy9hdXRoL3JlYXV0aCc7XHJcbiAgICAgIHJlZGlyZWN0VXJsLnNlYXJjaFBhcmFtcy5zZXQoJ25leHQnLCBwYXRobmFtZSk7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QocmVkaXJlY3RVcmwpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQWx3YXlzIHJldHVybiB0aGUgb3JpZ2luYWwgYHJlc3BvbnNlYCB0byBwcmVzZXJ2ZSBjb29raWVzXHJcbiAgcmV0dXJuIHJlc3BvbnNlO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIG1hdGNoZXI6IFtcclxuICAgICcvKCg/IV9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljbykuKiknLFxyXG4gIF0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwibWlkZGxld2FyZSIsInJlcXVlc3QiLCJyZXNwb25zZSIsIm5leHQiLCJoZWFkZXJzIiwic2V0Iiwic3VwYWJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb29raWVzIiwiZ2V0QWxsIiwic2V0QWxsIiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJkYXRhIiwic2Vzc2lvbiIsImVycm9yIiwiYXV0aCIsImdldFNlc3Npb24iLCJwYXRobmFtZSIsIm5leHRVcmwiLCJpc0F1dGhSb3V0ZSIsInN0YXJ0c1dpdGgiLCJpc0FwaUF1dGhSb3V0ZSIsImlzUHVibGljUm91dGUiLCJwcm90ZWN0ZWRSb3V0ZXMiLCJpc1Byb3RlY3RlZFJvdXRlIiwic29tZSIsInJvdXRlIiwicmVkaXJlY3RVcmwiLCJjbG9uZSIsInNlYXJjaFBhcmFtcyIsInJlZGlyZWN0IiwiZ2V0IiwiVVJMIiwidXJsIiwiaGFzWW91VHViZVRva2VuIiwicHJvdmlkZXJfdG9rZW4iLCJpbmNsdWRlcyIsInVzZXIiLCJ1c2VyX21ldGFkYXRhIiwiY29uZmlnIiwibWF0Y2hlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});